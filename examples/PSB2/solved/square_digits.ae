
def Math_floor_division : (i:Int) -> (j:Int)-> Int = \i -> \j -> native "i // j" ;

def String_concat : (i:String) -> (j:String) -> String = \i -> \j -> native "i + j";
def String_intToString : (i:Int) -> String = \i -> native "str(i)";


def square_digits ( n : Int) : String {
    if n == 0 then
        "0"
    else
        digit = n % 10;
        square = digit * digit;
        floor = Math_floor_division n 10;
        if floor == 0 then
            String_intToString(square)
        else
            String_concat (square_digits(Math_floor_division n 10)) (String_intToString(square))
}

def main (n : Int) : Unit {
    print (square_digits 44 )
}
