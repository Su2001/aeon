
def map : forall x q p : (mapper: (x: Int | q x) -> {r: Int | p r}) -> (x: Int | q x) -> {r: Int | p r} {
  mapper x
}

def main (_:Int) : Unit {
  times_2 : (x:Int | x > 0) -> {y: Int | y == 2*x} = (\x -> 2*x);
  mapper = map times_2;
  _ = print (mapper 0:{x: Int | x == 0});
  _ = print (mapper 1);
  _ = print (mapper 2);
  _ = print (mapper 3);
  print (mapper (-1))
}
