type Board;

def Board_size : (b:Board) -> Int = uninterpreted;

def Board_is_empty (b:Board) : {t:Bool | t == (Board_size b == 0)  } { native "len(b) == 0" }

def Board_tail (b:Board | Board_size b > 0) : {b2:Board | Board_size b2 == (Board_size b - 1)} { native "b[1:]" }

def conflicts (b:Board | Board_size b >= 0) : Int {
    if Board_is_empty b
    then 0
    else
        tl = Board_tail b;
        conflicts tl
}
